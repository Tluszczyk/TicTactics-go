openapi: 3.0.3
info:
    title: TicTactics API
    version: 1.0.0
    description: TicTactics API
tags:
  - name: auth
    description: Authentication Service
  - name: user
    description: User Service
  - name: game
    description: Game Service
  - name: db
    description: Database Service
paths:
    /auth/register:
        post:
            tags:
              - auth
            summary: Register a new user
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
                '409':
                    description: Conflict
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
                '500':
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
            x-amazon-apigateway-integration:
                uri: ${authentication_lambda_uri}
                httpMethod: "POST"
                timeoutInMillis: 29000
                passthroughBehavior: "when_no_match"
                type: "aws_proxy"
    /auth/login:
        post:
            tags:
              - auth
            summary: Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                '404':
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                '500':
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
            x-amazon-apigateway-integration:
                uri: ${authentication_lambda_uri}
                httpMethod: "POST"
                timeoutInMillis: 29000
                passthroughBehavior: "when_no_match"
                type: "aws_proxy"

    /auth/logout:
        post:
            tags:
              - auth
            summary: Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                '404':
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                '500':
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
            x-amazon-apigateway-integration:
                uri: ${authentication_lambda_uri}
                httpMethod: "POST"
                timeoutInMillis: 29000
                passthroughBehavior: "when_no_match"
                type: "aws_proxy"

    /auth/validate:
        post:
            tags:
              - auth
            summary: Validate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ValidateRequest'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ValidateResponse'
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ValidateResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ValidateResponse'
                '500':
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ValidateResponse'
            x-amazon-apigateway-integration:
                uri: ${authentication_lambda_uri}
                httpMethod: "POST"
                timeoutInMillis: 29000
                passthroughBehavior: "when_no_match"
                type: "aws_proxy"

components:
    schemas:
        Status:
            type: object
            properties:
                message:
                    type: string

        Credentials:
            type: object
            properties:
                username:
                    type: string
                passwordHash:
                    type: string
                    description: SHA256 hash of the password

        Session:
            type: object
            properties:
                token:
                    type: string
                uid:
                    type: string

        RegisterRequest:
            type: object
            properties:
                Credentials:
                    $ref: '#/components/schemas/Credentials'

        RegisterResponse:
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/Status'

        LoginRequest:
            type: object
            properties:
                Credentials:
                    $ref: '#/components/schemas/Credentials'

        LoginResponse:
            type: object
            properties:
                Session:
                    $ref: '#/components/schemas/Session'
                Status:
                    $ref: '#/components/schemas/Status'

        LogoutRequest:
            type: object
            properties:
                Session:
                    $ref: '#/components/schemas/Session'

        LogoutResponse:
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/Status'

        ValidateRequest:
            type: object
            properties:
                Session:
                    $ref: '#/components/schemas/Session'

        ValidateResponse:
            type: object
            properties:
                Status:
                    $ref: '#/components/schemas/Status'